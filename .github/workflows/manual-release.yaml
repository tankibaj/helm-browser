name: Manual Release

on:
  workflow_dispatch:
    inputs:
      version:
        description: 'Release version (e.g., v1.0.0-beta.1)'
        required: true
        type: string
      prerelease:
        description: 'Mark as pre-release'
        required: false
        type: boolean
        default: false
      draft:
        description: 'Create as draft'
        required: false
        type: boolean
        default: false

permissions:
  contents: write

jobs:
  manual-release:
    name: Manual Release
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.22'

      - name: Cache Go modules
        uses: actions/cache@v3
        with:
          path: |
            ~/.cache/go-build
            ~/go/pkg/mod
          key: ${{ runner.os }}-go-1.22-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-1.22-

      - name: Validate version format
        run: |
          if [[ ! "${{ github.event.inputs.version }}" =~ ^v[0-9]+\.[0-9]+\.[0-9]+(-.*)?$ ]]; then
            echo "❌ Invalid version format. Use semantic versioning (e.g., v1.0.0, v1.0.0-beta.1)"
            exit 1
          fi

      - name: Check if tag already exists
        run: |
          if git rev-parse "${{ github.event.inputs.version }}" >/dev/null 2>&1; then
            echo "❌ Tag ${{ github.event.inputs.version }} already exists"
            exit 1
          fi

      - name: Build binaries
        run: |
          export VERSION=${{ github.event.inputs.version }}
          make build-all-platforms

      - name: Generate checksums
        run: |
          cd dist
          sha256sum * > checksums.txt

      - name: Create simple binary name symlinks
        run: |
          cd dist
          ln -sf helm-browser-linux helm-browser
          ln -sf helm-browser-darwin-amd64 helm-browser-darwin
          ln -sf helm-browser-darwin-arm64 helm-browser-darwin-arm64
          ln -sf helm-browser-windows.exe helm-browser-windows

      - name: Create and push tag
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git tag -a "${{ github.event.inputs.version }}" -m "Release ${{ github.event.inputs.version }}"
          git push origin "${{ github.event.inputs.version }}"

      - name: Generate Release Notes
        id: generate_notes
        run: |
          # Get the previous tag
          PREVIOUS_TAG=$(git describe --tags --abbrev=0 HEAD^ 2>/dev/null || echo "")
          
          # Generate changelog
          if [ ! -z "$PREVIOUS_TAG" ]; then
            echo "CHANGELOG<<EOF" >> $GITHUB_OUTPUT
            echo "## What's Changed" >> $GITHUB_OUTPUT
            echo "" >> $GITHUB_OUTPUT
            git log --pretty=format:"* %s (%h)" $PREVIOUS_TAG..HEAD >> $GITHUB_OUTPUT
            echo "" >> $GITHUB_OUTPUT
            echo "EOF" >> $GITHUB_OUTPUT
          else
            echo "CHANGELOG=Manual release" >> $GITHUB_OUTPUT
          fi

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.event.inputs.version }}
          release_name: Release ${{ github.event.inputs.version }}
          body: |
            # Helm Chart Browser ${{ github.event.inputs.version }}
            
            A beautiful, interactive terminal UI for browsing and downloading Helm chart values.
            
            ## 📦 Installation
            
            ### Quick Download
            ```bash
            # Linux
            curl -L https://github.com/tankibaj/helm-browser/releases/download/${{ github.event.inputs.version }}/helm-browser-linux -o helm-browser
            chmod +x helm-browser
            
            # macOS (Intel)
            curl -L https://github.com/tankibaj/helm-browser/releases/download/${{ github.event.inputs.version }}/helm-browser-darwin-amd64 -o helm-browser
            chmod +x helm-browser
            
            # macOS (Apple Silicon)
            curl -L https://github.com/tankibaj/helm-browser/releases/download/${{ github.event.inputs.version }}/helm-browser-darwin-arm64 -o helm-browser
            chmod +x helm-browser
            
            # Windows (PowerShell)
            Invoke-WebRequest -Uri "https://github.com/tankibaj/helm-browser/releases/download/${{ github.event.inputs.version }}/helm-browser-windows.exe" -OutFile "helm-browser.exe"
            ```
            
            ${{ steps.generate_notes.outputs.CHANGELOG }}
            
            ## 📊 Checksums
            Download `checksums.txt` to verify file integrity.
            
            ---
            **Manually triggered release**
          draft: ${{ github.event.inputs.draft }}
          prerelease: ${{ github.event.inputs.prerelease }}

      # Upload binaries (same as automatic release)
      - name: Upload Linux Binary
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./dist/helm-browser-linux
          asset_name: helm-browser-linux
          asset_content_type: application/octet-stream

      - name: Upload Linux ARM64 Binary
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./dist/helm-browser-linux-arm64
          asset_name: helm-browser-linux-arm64
          asset_content_type: application/octet-stream

      - name: Upload macOS AMD64 Binary
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./dist/helm-browser-darwin-amd64
          asset_name: helm-browser-darwin-amd64
          asset_content_type: application/octet-stream

      - name: Upload macOS ARM64 Binary
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./dist/helm-browser-darwin-arm64
          asset_name: helm-browser-darwin-arm64
          asset_content_type: application/octet-stream

      - name: Upload Windows Binary
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./dist/helm-browser-windows.exe
          asset_name: helm-browser-windows.exe
          asset_content_type: application/octet-stream

      - name: Upload Generic Binary (Linux)
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./dist/helm-browser
          asset_name: helm-browser
          asset_content_type: application/octet-stream

      - name: Upload Checksums
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./dist/checksums.txt
          asset_name: checksums.txt
          asset_content_type: text/plain

      - name: Release Summary
        run: |
          echo "🎉 **Release Created Successfully!**" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "**Version:** ${{ github.event.inputs.version }}" >> $GITHUB_STEP_SUMMARY
          echo "**Pre-release:** ${{ github.event.inputs.prerelease }}" >> $GITHUB_STEP_SUMMARY
          echo "**Draft:** ${{ github.event.inputs.draft }}" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "**Download URLs:**" >> $GITHUB_STEP_SUMMARY
          echo "- Linux: https://github.com/tankibaj/helm-browser/releases/download/${{ github.event.inputs.version }}/helm-browser-linux" >> $GITHUB_STEP_SUMMARY
          echo "- macOS (Intel): https://github.com/tankibaj/helm-browser/releases/download/${{ github.event.inputs.version }}/helm-browser-darwin-amd64" >> $GITHUB_STEP_SUMMARY
          echo "- macOS (Apple Silicon): https://github.com/tankibaj/helm-browser/releases/download/${{ github.event.inputs.version }}/helm-browser-darwin-arm64" >> $GITHUB_STEP_SUMMARY
          echo "- Windows: https://github.com/tankibaj/helm-browser/releases/download/${{ github.event.inputs.version }}/helm-browser-windows.exe" >> $GITHUB_STEP_SUMMARY